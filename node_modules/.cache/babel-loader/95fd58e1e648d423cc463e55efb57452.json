{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/WebProject/notebook/inotebook/src/context/notes/NoteState.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteState = props => {\n  _s();\n\n  const host = \"http://localhost:5000\";\n  const notesInitial = [{\n    \"_id\": \"625c13299f37c746e763de90\",\n    \"user\": \"622c40662e6f61ffefca574d\",\n    \"title\": \"update tilte update3\",\n    \"description\": \"update description3\",\n    \"tag\": \"update tags 4\",\n    \"date\": \"2022-04-17T13:16:25.310Z\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"625c13549f37c746e763de94\",\n    \"user\": \"622c40662e6f61ffefca574d\",\n    \"title\": \"my title 3\",\n    \"description\": \" abhi\",\n    \"tag\": \"personal\",\n    \"date\": \"2022-04-17T13:17:08.178Z\",\n    \"__v\": 0\n  }];\n  const [notes, setNotes] = useState(notesInitial); // const notesInitial = [];\n  // const [notes, setNotes] = useState(notesInitial);\n  // // Get all notes  \n  // const getnotes = async () => {\n  //     const response = await fetch(`${host}api/notes/fetchallnotes`, {\n  //         method: \"GET\",\n  //         headers: {\n  //             \"Content-Type\": \"application/json\",\n  //             \"auth-token\":localStorage.getItem('token')\n  //         },\n  //     });\n  //     const note = await response.json();\n  //     // console.log(json)\n  //     setNotes(note)\n  // };\n  // // Add note\n\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjIyYzQwNjYyZTZmNjFmZmVmY2E1NzRkIn0sImlhdCI6MTY0NzA2NzI2M30.uezmBiRR8TDBBQ0OHXsHucznQXB6KQe5sQhrnzMfPRI\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await response.json();\n    const noteab = {\n      \"_id\": \"625c13549f37c746e763d6e94\",\n      \"user\": \"622c40662e6f61ffefca574d\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2022-04-17T13:17:08.178Z\",\n      \"__v\": 0\n    };\n    setNotes(notes.concat(noteab));\n  }; // delete note\n\n\n  const deleteNote = async id => {\n    // api call for delete note \n    // const response = await fetch(`${host}/api/notes/deleteNote/${id}`, {\n    //     method: \"DELETE\",\n    //     headers: {\n    //         \"Content-Type\": \"application/json\",\n    //         \"auth-token\":localStorage.getItem('token')\n    //     },\n    // });\n    // const json= response.json();\n    // console.log(json)\n    // logic to delete  notes \n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  }; // // Edit note\n\n\n  const editNote = async (id, title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/updateNote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjIyYzQwNjYyZTZmNjFmZmVmY2E1NzRkIn0sImlhdCI6MTY0NzA2NzI2M30.uezmBiRR8TDBBQ0OHXsHucznQXB6KQe5sQhrnzMfPRI\" // \"auth-token\":localStorage.getItem('token')\n\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    let newNotes = JSON.parse(JSON.stringify(notes)); // logic to edit note in client\n\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n\n    setNotes(newNotes);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <NoteContext.Provider value={{ notes, setNotes, addNote, deleteNote, editNote, getnotes }}>\n    _jsxDEV(NoteContext.Provider, {\n      value: {\n        notes,\n        setNotes,\n        addNote,\n        deleteNote,\n        editNote\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"sources":["/Users/abhishekkumar/WebProject/notebook/inotebook/src/context/notes/NoteState.js"],"names":["useState","NoteContext","NoteState","props","host","notesInitial","notes","setNotes","addNote","title","description","tag","response","fetch","method","headers","body","JSON","stringify","note","json","noteab","concat","deleteNote","id","newNotes","filter","_id","editNote","parse","index","length","element","children"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\n\nconst NoteState = (props) => {\n    const host = \"http://localhost:5000\";\n\n    const notesInitial = [\n        {\n            \"_id\": \"625c13299f37c746e763de90\",\n            \"user\": \"622c40662e6f61ffefca574d\",\n            \"title\": \"update tilte update3\",\n            \"description\": \"update description3\",\n            \"tag\": \"update tags 4\",\n            \"date\": \"2022-04-17T13:16:25.310Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"625c13549f37c746e763de94\",\n            \"user\": \"622c40662e6f61ffefca574d\",\n            \"title\": \"my title 3\",\n            \"description\": \" abhi\",\n            \"tag\": \"personal\",\n            \"date\": \"2022-04-17T13:17:08.178Z\",\n            \"__v\": 0\n        },]\n\n    const [notes, setNotes] = useState(notesInitial);\n\n\n    // const notesInitial = [];\n\n    // const [notes, setNotes] = useState(notesInitial);\n\n    // // Get all notes  \n    // const getnotes = async () => {\n\n    //     const response = await fetch(`${host}api/notes/fetchallnotes`, {\n    //         method: \"GET\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //             \"auth-token\":localStorage.getItem('token')\n    //         },\n    //     });\n    //     const note = await response.json();\n    //     // console.log(json)\n    //     setNotes(note)\n\n    // };\n    // // Add note\n    const addNote = async (title, description, tag) => {\n\n        const response = await fetch(`${host}/api/notes/addnote`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjIyYzQwNjYyZTZmNjFmZmVmY2E1NzRkIn0sImlhdCI6MTY0NzA2NzI2M30.uezmBiRR8TDBBQ0OHXsHucznQXB6KQe5sQhrnzMfPRI\"\n            },\n            body: JSON.stringify({ title, description, tag })\n        });\n        const note = await response.json()\n\n\n        const noteab = {\n            \"_id\": \"625c13549f37c746e763d6e94\",\n            \"user\": \"622c40662e6f61ffefca574d\",\n            \"title\": title,\n            \"description\": description,\n            \"tag\": tag,\n            \"date\": \"2022-04-17T13:17:08.178Z\",\n            \"__v\": 0\n        }\n        setNotes(notes.concat(noteab));\n    };\n\n    // delete note\n    const deleteNote = async (id) => {\n        // api call for delete note \n        // const response = await fetch(`${host}/api/notes/deleteNote/${id}`, {\n        //     method: \"DELETE\",\n        //     headers: {\n        //         \"Content-Type\": \"application/json\",\n        //         \"auth-token\":localStorage.getItem('token')\n        //     },\n\n        // });\n        // const json= response.json();\n        // console.log(json)\n\n        // logic to delete  notes \n        const newNotes = notes.filter((note) => {\n            return note._id !== id;\n        });\n        setNotes(newNotes);\n    };\n\n    // // Edit note\n    const editNote = async (id, title, description, tag) => {\n\n\n        const response = await fetch(`${host}/api/notes/updateNote/${id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjIyYzQwNjYyZTZmNjFmZmVmY2E1NzRkIn0sImlhdCI6MTY0NzA2NzI2M30.uezmBiRR8TDBBQ0OHXsHucznQXB6KQe5sQhrnzMfPRI\"\n                // \"auth-token\":localStorage.getItem('token')\n            },\n            body: JSON.stringify({ title, description, tag })\n        });\n        const json = response.json();\n\n        let newNotes = JSON.parse(JSON.stringify(notes))\n\n        // logic to edit note in client\n\n        for (let index = 0; index < newNotes.length; index++) {\n            const element = newNotes[index];\n\n            if (element._id === id) {\n                newNotes[index].title = title;\n                newNotes[index].description = description;\n                newNotes[index].tag = tag;\n                break;\n            }\n        }\n\n        setNotes(newNotes)\n    };\n\n\n\n\n\n\n\n\n    return (\n        // <NoteContext.Provider value={{ notes, setNotes, addNote, deleteNote, editNote, getnotes }}>\n        <NoteContext.Provider value={{ notes, setNotes, addNote, deleteNote, editNote }}>\n            {props.children}\n        </NoteContext.Provider>\n    );\n};\nexport default NoteState;\n"]},"metadata":{},"sourceType":"module"}