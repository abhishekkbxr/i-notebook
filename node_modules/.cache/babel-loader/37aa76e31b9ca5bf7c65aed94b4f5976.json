{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/WebProject/notebook/inotebook/src/context/notes/NoteState.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteState = props => {\n  _s();\n\n  // const host = \"http://localhost:5000\";\n  // const notesInitial = [];\n  // const [notes, setNotes] = useState(notesInitial);\n  // // Get all notes  \n  // const getnotes = async () => {\n  //     const response = await fetch(`${host}api/notes/fetchallnotes`, {\n  //         method: \"GET\",\n  //         headers: {\n  //             \"Content-Type\": \"application/json\",\n  //             \"auth-token\":localStorage.getItem('token')\n  //         },\n  //     });\n  //     const note = await response.json();\n  //     // console.log(json)\n  //     setNotes(note)\n  // };\n  // // Add note\n  const addNote = async (title, description, tag) => {\n    // const response = await fetch(`${host}/api/notes/addnote`, {\n    //     method: \"POST\",\n    //     headers: {\n    //         \"Content-Type\": \"application/json\",\n    //         \"auth-token\":localStorage.getItem('token')\n    //     },\n    //     body: JSON.stringify({ title, description, tag })\n    // });\n    // const note = await response.json()\n    const note = {\n      \"_id\": \"625c13549f37c746e763d6e94\",\n      \"user\": \"622c40662e6f61ffefca574d\",\n      \"title\": \"my title 3 added in add notes \",\n      \"description\": \" abhi\",\n      \"tag\": \"personal\",\n      \"date\": \"2022-04-17T13:17:08.178Z\",\n      \"__v\": 0\n    };\n    setNotes(notes.concat(note));\n  }; // // delete note\n  // const deleteNote = async (id) => {\n  //     // api call for delete note \n  //     const response = await fetch(`${host}/api/notes/deleteNote/${id}`, {\n  //         method: \"DELETE\",\n  //         headers: {\n  //             \"Content-Type\": \"application/json\",\n  //             \"auth-token\":localStorage.getItem('token')\n  //         },\n  //     });\n  //     // const json= response.json();\n  //     // console.log(json)\n  //     // logic to delete  notes \n  //     const newNotes = notes.filter((note) => {\n  //         return note._id !== id;\n  //     });\n  //     setNotes(newNotes);\n  // };\n  // // Edit note\n  // const editNote = async (id, title, description, tag) => {\n  //     const response = await fetch(`${host}/api/notes/updateNote/${id}`, {\n  //         method: \"PUT\",\n  //         headers: {\n  //             \"Content-Type\": \"application/json\",\n  //             \"auth-token\":localStorage.getItem('token')\n  //         },\n  //         body: JSON.stringify({ title, description, tag })\n  //     });\n  //     const json = response.json();\n  //     let newNotes = JSON.parse(JSON.stringify(notes))\n  //     // logic to edit note in client\n  //     for (let index = 0; index < newNotes.length; index++) {\n  //         const element = newNotes[index];\n  //         if (element._id === id) {\n  //             newNotes[index].title = title;\n  //             newNotes[index].description = description;\n  //             newNotes[index].tag = tag;\n  //             break;\n  //         }\n  //     }\n  //     setNotes(newNotes)\n  // };\n\n\n  const notesInitial = [{\n    \"_id\": \"625c13299f37c746e763de90\",\n    \"user\": \"622c40662e6f61ffefca574d\",\n    \"title\": \"update tilte update3\",\n    \"description\": \"update description3\",\n    \"tag\": \"update tags 4\",\n    \"date\": \"2022-04-17T13:16:25.310Z\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"625c13549f37c746e763de94\",\n    \"user\": \"622c40662e6f61ffefca574d\",\n    \"title\": \"my title 3\",\n    \"description\": \" abhi\",\n    \"tag\": \"personal\",\n    \"date\": \"2022-04-17T13:17:08.178Z\",\n    \"__v\": 0\n  }];\n  const [notes, setNotes] = useState(notesInitial);\n  return (\n    /*#__PURE__*/\n    // <NoteContext.Provider value={{ notes, setNotes, addNote, deleteNote, editNote, getnotes }}>\n    _jsxDEV(NoteContext.Provider, {\n      value: {\n        notes,\n        setNotes,\n        addNote\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"sources":["/Users/abhishekkumar/WebProject/notebook/inotebook/src/context/notes/NoteState.js"],"names":["useState","NoteContext","NoteState","props","addNote","title","description","tag","note","setNotes","notes","concat","notesInitial","children"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,QAAMC,OAAO,GAAG,OAAOC,KAAP,EAAcC,WAAd,EAA2BC,GAA3B,KAAmC;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,UAAMC,IAAI,GAAG;AACT,aAAO,2BADE;AAET,cAAQ,0BAFC;AAGT,eAAS,gCAHA;AAIT,qBAAe,OAJN;AAKT,aAAO,UALE;AAMT,cAAQ,0BANC;AAOT,aAAO;AAPE,KAAb;AASAC,IAAAA,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaH,IAAb,CAAD,CAAR;AACH,GAvBD,CAtByB,CA+CzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMI,YAAY,GAAG,CACjB;AACI,WAAO,0BADX;AAEI,YAAQ,0BAFZ;AAGI,aAAS,sBAHb;AAII,mBAAe,qBAJnB;AAKI,WAAO,eALX;AAMI,YAAQ,0BANZ;AAOI,WAAO;AAPX,GADiB,EAUjB;AACI,WAAO,0BADX;AAEI,YAAQ,0BAFZ;AAGI,aAAS,YAHb;AAII,mBAAe,OAJnB;AAKI,WAAO,UALX;AAMI,YAAQ,0BANZ;AAOI,WAAO;AAPX,GAViB,CAArB;AAoBA,QAAM,CAACF,KAAD,EAAQD,QAAR,IAAoBT,QAAQ,CAACY,YAAD,CAAlC;AAQA;AAAA;AACI;AACA,YAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAF;AAASD,QAAAA,QAAT;AAAmBL,QAAAA;AAAnB,OAA7B;AAAA,gBACKD,KAAK,CAACU;AADX;AAAA;AAAA;AAAA;AAAA;AAFJ;AAMH,CAnID;;GAAMX,S;;KAAAA,S;AAoIN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\n\nconst NoteState = (props) => {\n    // const host = \"http://localhost:5000\";\n    // const notesInitial = [];\n\n    // const [notes, setNotes] = useState(notesInitial);\n\n    // // Get all notes  \n    // const getnotes = async () => {\n\n    //     const response = await fetch(`${host}api/notes/fetchallnotes`, {\n    //         method: \"GET\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //             \"auth-token\":localStorage.getItem('token')\n    //         },\n    //     });\n    //     const note = await response.json();\n    //     // console.log(json)\n    //     setNotes(note)\n\n    // };\n    // // Add note\n    const addNote = async (title, description, tag) => {\n\n        // const response = await fetch(`${host}/api/notes/addnote`, {\n        //     method: \"POST\",\n        //     headers: {\n        //         \"Content-Type\": \"application/json\",\n        //         \"auth-token\":localStorage.getItem('token')\n        //     },\n        //     body: JSON.stringify({ title, description, tag })\n        // });\n        // const note = await response.json()\n\n\n        const note = {\n            \"_id\": \"625c13549f37c746e763d6e94\",\n            \"user\": \"622c40662e6f61ffefca574d\",\n            \"title\": \"my title 3 added in add notes \",\n            \"description\": \" abhi\",\n            \"tag\": \"personal\",\n            \"date\": \"2022-04-17T13:17:08.178Z\",\n            \"__v\": 0\n        }\n        setNotes(notes.concat(note));\n    };\n\n    // // delete note\n    // const deleteNote = async (id) => {\n    //     // api call for delete note \n    //     const response = await fetch(`${host}/api/notes/deleteNote/${id}`, {\n    //         method: \"DELETE\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //             \"auth-token\":localStorage.getItem('token')\n    //         },\n\n    //     });\n    //     // const json= response.json();\n    //     // console.log(json)\n\n    //     // logic to delete  notes \n    //     const newNotes = notes.filter((note) => {\n    //         return note._id !== id;\n    //     });\n    //     setNotes(newNotes);\n    // };\n\n    // // Edit note\n    // const editNote = async (id, title, description, tag) => {\n\n    //     const response = await fetch(`${host}/api/notes/updateNote/${id}`, {\n    //         method: \"PUT\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //             \"auth-token\":localStorage.getItem('token')\n    //         },\n    //         body: JSON.stringify({ title, description, tag })\n    //     });\n    //     const json = response.json();\n\n\n    //     let newNotes = JSON.parse(JSON.stringify(notes))\n    //     // logic to edit note in client\n    //     for (let index = 0; index < newNotes.length; index++) {\n    //         const element = newNotes[index];\n\n    //         if (element._id === id) {\n    //             newNotes[index].title = title;\n    //             newNotes[index].description = description;\n    //             newNotes[index].tag = tag;\n    //             break;\n    //         }\n    //     }\n    //     setNotes(newNotes)\n    // };\n\n    const notesInitial = [\n        {\n            \"_id\": \"625c13299f37c746e763de90\",\n            \"user\": \"622c40662e6f61ffefca574d\",\n            \"title\": \"update tilte update3\",\n            \"description\": \"update description3\",\n            \"tag\": \"update tags 4\",\n            \"date\": \"2022-04-17T13:16:25.310Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"625c13549f37c746e763de94\",\n            \"user\": \"622c40662e6f61ffefca574d\",\n            \"title\": \"my title 3\",\n            \"description\": \" abhi\",\n            \"tag\": \"personal\",\n            \"date\": \"2022-04-17T13:17:08.178Z\",\n            \"__v\": 0\n        },]\n\n    const [notes, setNotes] = useState(notesInitial);\n\n\n\n\n\n\n\n    return (\n        // <NoteContext.Provider value={{ notes, setNotes, addNote, deleteNote, editNote, getnotes }}>\n        <NoteContext.Provider value={{ notes, setNotes, addNote }}>\n            {props.children}\n        </NoteContext.Provider>\n    );\n};\nexport default NoteState;\n"]},"metadata":{},"sourceType":"module"}