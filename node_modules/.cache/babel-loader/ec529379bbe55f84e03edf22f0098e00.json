{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/project folder/notebook/inotebook/src/context/notes/NoteState.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteState = props => {\n  _s();\n\n  const host = \"http://localhost:5000\";\n  const notesInitial = [{\n    \"_id\": \"622b0549890f1d1273288ad51\",\n    \"user\": \"6228bd7cab58086b170f2cb2\",\n    \"title\": \"my name\",\n    \"description\": \" abhishek\",\n    \"tag\": \"personal\",\n    \"date\": \"2022-03-11T08:16:09.942Z\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"622b0549890f1d1273288ad52\",\n    \"user\": \"6228bd7cab58086b170f2cb2\",\n    \"title\": \"my name\",\n    \"description\": \" abhishek\",\n    \"tag\": \"personal\",\n    \"date\": \"2022-03-11T08:16:09.942Z\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"622b0549890f1d1273288ad53\",\n    \"user\": \"6228bd7cab58086b170f2cb2\",\n    \"title\": \"my name\",\n    \"description\": \" abhishek\",\n    \"tag\": \"personal\",\n    \"date\": \"2022-03-11T08:16:09.942Z\",\n    \"__v\": 0\n  }];\n  const [notes, setNotes] = useState(notesInitial); // Add note\n\n  const addNote = (title, description, tag) => {\n    // console.log(\"adding a new note\")\n    // todo :api call\n    const note = {\n      \"_id\": \"622b0551890f1d12473288ad7\",\n      \"user\": \"6228bd7cab58086b170f2cb2\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2022-03-11T08:16:17.292Z\",\n      \"__v\": 0\n    };\n    setNotes(notes.concat(note));\n  }; // delete note \n\n\n  const deleteNote = id => {\n    // console.log(\"deleting the note with \"+ id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  }; // Edit note \n\n\n  const editNote = async (id, title, descripttion, tag) => {\n    // API call\n    // const response = await fetch(url, {\n    //     method: 'POST',\n    //     headers: {\n    //         'Content-Type': 'application/json'\n    //     },\n    // });\n    const response = await fetch(`${host}/api/notes/updateNote/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9'\n      }\n    }); // logic to edit note in client \n\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n\n      if (element._id === id) {\n        element.title = title, element.descripttion = descripttion, element.tag = tag;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"sources":["/Users/abhishekkumar/project folder/notebook/inotebook/src/context/notes/NoteState.js"],"names":["useState","NoteContext","NoteState","props","host","notesInitial","notes","setNotes","addNote","title","description","tag","note","concat","deleteNote","id","newNotes","filter","_id","editNote","descripttion","response","fetch","method","headers","index","length","element","children"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,IAAI,GAAG,uBAAb;AACA,QAAMC,YAAY,GAAG,CACjB;AACI,WAAO,2BADX;AAEI,YAAQ,0BAFZ;AAGI,aAAS,SAHb;AAII,mBAAe,WAJnB;AAKI,WAAO,UALX;AAMI,YAAQ,0BANZ;AAOI,WAAO;AAPX,GADiB,EAUjB;AACI,WAAO,2BADX;AAEI,YAAQ,0BAFZ;AAGI,aAAS,SAHb;AAII,mBAAe,WAJnB;AAKI,WAAO,UALX;AAMI,YAAQ,0BANZ;AAOI,WAAO;AAPX,GAViB,EAmBjB;AACI,WAAO,2BADX;AAEI,YAAQ,0BAFZ;AAGI,aAAS,SAHb;AAII,mBAAe,WAJnB;AAKI,WAAO,UALX;AAMI,YAAQ,0BANZ;AAOI,WAAO;AAPX,GAnBiB,CAArB;AA8BA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACK,YAAD,CAAlC,CAhCyB,CAkCzB;;AACA,QAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,WAAR,EAAqBC,GAArB,KAA6B;AACzC;AACA;AACA,UAAMC,IAAI,GAAG;AACT,aAAO,2BADE;AAET,cAAQ,0BAFC;AAGT,eAASH,KAHA;AAIT,qBAAeC,WAJN;AAKT,aAAOC,GALE;AAMT,cAAQ,0BANC;AAOT,aAAO;AAPE,KAAb;AASAJ,IAAAA,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAaD,IAAb,CAAD,CAAR;AAEH,GAdD,CAnCyB,CAmDzB;;;AACA,QAAME,UAAU,GAAIC,EAAD,IAAQ;AACvB;AACA,UAAMC,QAAQ,GAAGV,KAAK,CAACW,MAAN,CAAcL,IAAD,IAAU;AAAE,aAAOA,IAAI,CAACM,GAAL,KAAaH,EAApB;AAAwB,KAAjD,CAAjB;AACAR,IAAAA,QAAQ,CAACS,QAAD,CAAR;AAEH,GALD,CApDyB,CA2DzB;;;AACA,QAAMG,QAAQ,GAAG,OAAOJ,EAAP,EAAWN,KAAX,EAAkBW,YAAlB,EAAgCT,GAAhC,KAAwC;AAErD;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA,UAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAElB,IAAK,yBAAwBW,EAAG,EAApC,EAAuC;AAC/DQ,MAAAA,MAAM,EAAE,MADuD;AAE/DC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,sBAAa;AAFR;AAFsD,KAAvC,CAA5B,CAZqD,CAuBrD;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGnB,KAAK,CAACoB,MAAlC,EAA0CD,KAAK,EAA/C,EAAmD;AAC/C,YAAME,OAAO,GAAGrB,KAAK,CAACmB,KAAD,CAArB;;AACA,UAAIE,OAAO,CAACT,GAAR,KAAgBH,EAApB,EAAwB;AACpBY,QAAAA,OAAO,CAAClB,KAAR,GAAgBA,KAAhB,EACIkB,OAAO,CAACP,YAAR,GAAuBA,YAD3B,EAEIO,OAAO,CAAChB,GAAR,GAAcA,GAFlB;AAGH;AACJ;AACJ,GAhCD;;AAkCA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAF;AAASE,MAAAA,OAAT;AAAkBM,MAAAA,UAAlB;AAA8BK,MAAAA;AAA9B,KAA7B;AAAA,cACKhB,KAAK,CAACyB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CApGD;;GAAM1B,S;;KAAAA,S;AAqGN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\n\nconst NoteState = (props) => {\n    const host = \"http://localhost:5000\"\n    const notesInitial = [\n        {\n            \"_id\": \"622b0549890f1d1273288ad51\",\n            \"user\": \"6228bd7cab58086b170f2cb2\",\n            \"title\": \"my name\",\n            \"description\": \" abhishek\",\n            \"tag\": \"personal\",\n            \"date\": \"2022-03-11T08:16:09.942Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"622b0549890f1d1273288ad52\",\n            \"user\": \"6228bd7cab58086b170f2cb2\",\n            \"title\": \"my name\",\n            \"description\": \" abhishek\",\n            \"tag\": \"personal\",\n            \"date\": \"2022-03-11T08:16:09.942Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"622b0549890f1d1273288ad53\",\n            \"user\": \"6228bd7cab58086b170f2cb2\",\n            \"title\": \"my name\",\n            \"description\": \" abhishek\",\n            \"tag\": \"personal\",\n            \"date\": \"2022-03-11T08:16:09.942Z\",\n            \"__v\": 0\n        },\n    ];\n\n    const [notes, setNotes] = useState(notesInitial)\n\n    // Add note\n    const addNote = (title, description, tag) => {\n        // console.log(\"adding a new note\")\n        // todo :api call\n        const note = {\n            \"_id\": \"622b0551890f1d12473288ad7\",\n            \"user\": \"6228bd7cab58086b170f2cb2\",\n            \"title\": title,\n            \"description\": description,\n            \"tag\": tag,\n            \"date\": \"2022-03-11T08:16:17.292Z\",\n            \"__v\": 0\n        }\n        setNotes(notes.concat(note))\n\n    }\n\n    // delete note \n    const deleteNote = (id) => {\n        // console.log(\"deleting the note with \"+ id);\n        const newNotes = notes.filter((note) => { return note._id !== id })\n        setNotes(newNotes);\n\n    }\n\n    // Edit note \n    const editNote = async (id, title, descripttion, tag) => {\n\n        // API call\n        // const response = await fetch(url, {\n        //     method: 'POST',\n        //     headers: {\n        //         'Content-Type': 'application/json'\n\n        //     },\n\n\n        // });\n        const response = await fetch(`${host}/api/notes/updateNote/${id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token':'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9'\n            }\n\n        })\n\n\n\n        // logic to edit note in client \n        for (let index = 0; index < notes.length; index++) {\n            const element = notes[index];\n            if (element._id === id) {\n                element.title = title,\n                    element.descripttion = descripttion,\n                    element.tag = tag\n            }\n        }\n    }\n\n    return (\n        <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote }}>\n            {props.children}\n\n        </NoteContext.Provider>\n    )\n}\nexport default NoteState;"]},"metadata":{},"sourceType":"module"}