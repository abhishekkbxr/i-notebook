{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/project folder/notebook/inotebook/src/context/notes/NoteState.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteState = props => {\n  _s();\n\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial); // Get all notes  \n\n  const getnotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjIyYzQwNjYyZTZmNjFmZmVmY2E1NzRkIn0sImlhdCI6MTY0NzA2NzI2M30.uezmBiRR8TDBBQ0OHXsHucznQXB6KQe5sQhrnzMfPRI\"\n      }\n    });\n    const json = await response.json(); // console.log(json)\n\n    setNotes(json);\n  }; // Add note\n\n\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjIyYzQwNjYyZTZmNjFmZmVmY2E1NzRkIn0sImlhdCI6MTY0NzA2NzI2M30.uezmBiRR8TDBBQ0OHXsHucznQXB6KQe5sQhrnzMfPRI\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    }); // const json = response.json();\n\n    const note = {\n      _id: \"622b0551890f1d12473288ad7\",\n      user: \"6228bd7cab58086b170f2cb2\",\n      title: title,\n      description: description,\n      tag: tag,\n      date: \"2022-03-11T08:16:17.292Z\",\n      __v: 0\n    };\n    setNotes(notes.concat(note));\n  }; // delete note\n\n\n  const deleteNote = async id => {\n    // api call for delete note \n    const response = await fetch(`${host}/api/notes/deleteNote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjIyYzQwNjYyZTZmNjFmZmVmY2E1NzRkIn0sImlhdCI6MTY0NzA2NzI2M30.uezmBiRR8TDBBQ0OHXsHucznQXB6KQe5sQhrnzMfPRI\"\n      }\n    });\n    const json = response.json();\n    console.log(json); // logic to delete  notes \n\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  }; // Edit note\n\n\n  const editNote = async (id, title, descripttion, tag) => {\n    const response = await fetch(`${host}/api/notes/updateNote/${id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjIyYzQwNjYyZTZmNjFmZmVmY2E1NzRkIn0sImlhdCI6MTY0NzA2NzI2M30.uezmBiRR8TDBBQ0OHXsHucznQXB6KQe5sQhrnzMfPRI\"\n      },\n      body: JSON.stringify({\n        title,\n        descripttion,\n        tag\n      })\n    });\n    const json = response.json(); // logic to edit note in client\n\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n\n      if (element._id === id) {\n        element.title = title;\n        element.descripttion = descripttion;\n        element.tag = tag;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getnotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"sources":["/Users/abhishekkumar/project folder/notebook/inotebook/src/context/notes/NoteState.js"],"names":["useState","NoteContext","NoteState","props","host","notesInitial","notes","setNotes","getnotes","response","fetch","method","headers","json","addNote","title","description","tag","body","JSON","stringify","note","_id","user","date","__v","concat","deleteNote","id","console","log","newNotes","filter","editNote","descripttion","index","length","element","children"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\n\nconst NoteState = (props) => {\n    const host = \"http://localhost:5000\";\n    const notesInitial = [];\n\n    const [notes, setNotes] = useState(notesInitial);\n\n    // Get all notes  \n    const getnotes = async () => {\n\n        const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjIyYzQwNjYyZTZmNjFmZmVmY2E1NzRkIn0sImlhdCI6MTY0NzA2NzI2M30.uezmBiRR8TDBBQ0OHXsHucznQXB6KQe5sQhrnzMfPRI\",\n            },\n        });\n        const json = await response.json();\n        // console.log(json)\n        setNotes(json)\n\n    };\n    // Add note\n    const addNote = async (title, description, tag) => {\n\n        const response = await fetch(`${host}/api/notes/addnote`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjIyYzQwNjYyZTZmNjFmZmVmY2E1NzRkIn0sImlhdCI6MTY0NzA2NzI2M30.uezmBiRR8TDBBQ0OHXsHucznQXB6KQe5sQhrnzMfPRI\",\n            },\n            body: JSON.stringify({ title, description, tag })\n        });\n        // const json = response.json();\n\n\n        const note = {\n            _id: \"622b0551890f1d12473288ad7\",\n            user: \"6228bd7cab58086b170f2cb2\",\n            title: title,\n            description: description,\n            tag: tag,\n            date: \"2022-03-11T08:16:17.292Z\",\n            __v: 0,\n        };\n        setNotes(notes.concat(note));\n    };\n\n    // delete note\n    const deleteNote = async (id) => {\n        // api call for delete note \n        const response = await fetch(`${host}/api/notes/deleteNote/${id}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjIyYzQwNjYyZTZmNjFmZmVmY2E1NzRkIn0sImlhdCI6MTY0NzA2NzI2M30.uezmBiRR8TDBBQ0OHXsHucznQXB6KQe5sQhrnzMfPRI\",\n            },\n            \n        });\n        const json= response.json();\n        console.log(json)\n\n        // logic to delete  notes \n        const newNotes = notes.filter((note) => {\n            return note._id !== id;\n        });\n        setNotes(newNotes);\n    };\n\n    // Edit note\n    const editNote = async (id, title, descripttion, tag) => {\n\n        const response = await fetch(`${host}/api/notes/updateNote/${id}`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjIyYzQwNjYyZTZmNjFmZmVmY2E1NzRkIn0sImlhdCI6MTY0NzA2NzI2M30.uezmBiRR8TDBBQ0OHXsHucznQXB6KQe5sQhrnzMfPRI\",\n            },\n            body: JSON.stringify({ title, descripttion, tag })\n        });\n        const json= response.json();\n    \n     // logic to edit note in client\n     for (let index = 0; index < notes.length; index++) {\n        const element = notes[index];\n\n        if (element._id === id) {\n            element.title = title\n                element.descripttion = descripttion\n                element.tag = tag\n        }\n     }\n};\n\nreturn (\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getnotes }}>\n        {props.children}\n    </NoteContext.Provider>\n);\n};\nexport default NoteState;\n"]},"metadata":{},"sourceType":"module"}