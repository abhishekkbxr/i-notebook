{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/WebProject/notebook/inotebook/src/component /Notes.js\",\n    _s = $RefreshSig$();\n\n// import React, { useContext, useEffect, useRef ,useState} from 'react'\n// import noteContext from '../context/notes/noteContext'\n// import AddNote from './AddNote';\n// import Noteitem from './Noteitem';\n// import { useNavigate } from \"react-router-dom\"\n// function Notes() {\n//     const context = useContext(noteContext);\n//     const navigate = useNavigate();\n//     const { notes, getnotes , editNote } = context\n//     useEffect(() => {\n//         if(localStorage.getItem(\"token\")){\n//             getnotes();\n//         }\n//         else{\n//             navigate('/login')\n//         }\n//         // eslint-disable-next-line\n//     }, [])\n//     const updateNote = (currentNote) => {\n//         ref.current.click();\n//         setNote({ id:currentNote._id ,  etitle:currentNote.title , edescription : currentNote.description , etag : currentNote.tag})\n//     }\n//     const ref = useRef(null)\n//     const refClose = useRef(null)\n//     const [note , setNote] = useState({etitle:\"\" , edescription:\"\" ,etag:\"\" })\n//     const handleClick =(e)=>{\n//         // console.log(\"updating the notes \",note)\n//         editNote(note.id , note.etitle , note.edescription ,note.etag);\n//         refClose.current.click();\n//     }\n//     const onChange=(e)=>{\n//        setNote({...note , [e.target.name]: e.target.value})\n//     }\n//     return (\n//         <>\n//             <AddNote />\n//             {/* <!-- Button trigger modal --> */}\n//             <button ref={ref} type=\"button\" className=\"btn btn-primary d-none\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n//                 Launch demo modal\n//             </button>\n//             {/* <!-- Modal --> */}\n//             <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//                 <div className=\"modal-dialog\">\n//                     <div className=\"modal-content\">\n//                         <div className=\"modal-header\">\n//                             <h5 className=\"modal-title\" id=\"exampleModalLabel\"> Edit Notes </h5>\n//                             <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n//                         </div>\n//                         <div className=\"modal-body\">\n//                             {/* model form */}\n//                             <form>\n//                                 <div className=\"mb-3\">\n//                                     <label htmlFor=\"etitle\" className=\"form-label\">Title</label>\n//                                     <input type=\"text\" className=\"form-control\" id=\"etitle\" name=\"etitle\" value={note.etitle} aria-describedby=\"emailHelp\" onChange={onChange} minLength={3} required/>\n//                                 </div>\n//                                 <div className=\"mb-3\">\n//                                     <label htmlFor=\"edescription\" className=\"form-label\" >description</label>\n//                                     <input type=\"text\" className=\"form-control\" id=\"edescription\" name=\"edescription\" value={note.edescription} onChange={onChange} minLength={3} required/>\n//                                 </div>\n//                                 <div className=\"mb-3\">\n//                                     <label htmlFor=\"etag\" className=\"form-label\" >tag</label>\n//                                     <input type=\"text\" className=\"form-control\" id=\"etag\" name='etag' value={note.etag} onChange={onChange} minLength={3} required />\n//                                 </div>\n//                                 {/* <button type=\"submit\" className=\"btn btn-primary\" onClick={handleClick}>Add Note</button> */}\n//                             </form>\n//                         </div>\n//                         <div className=\"modal-footer\">\n//                             <button type=\"button\" ref={refClose} className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n//                             <button disabled={note.etitle.length<3 || note.edescription.length<3 } type=\"button\" onClick={handleClick} className=\"btn btn-primary\">Update Note</button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//             <div className=\"row my-3\">\n//                 <h1> Your  Notes </h1> \n//                 <div className=\"container\">\n//                     {notes.length === 0 && 'no notes to display '}\n//                 </div>\n//                 {notes.map((note)=>{\n//                     return <Noteitem note = {note}/>\n//                 })}\n//             </div>\n//         </>\n//     )\n// }\n// export default Notes\nimport React, { useContext } from 'react';\nimport noteContext from '../context/notes/noteContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notes = () => {\n  _s();\n\n  const context = useContext(noteContext);\n  const {\n    notes,\n    setNotes\n  } = context;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row my-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Your  Notes \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: notes.length === 0 && 'no notes to display '\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), notes.map(note => {\n      return note.title; // return <Noteitem note={note} />\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Notes, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/abhishekkumar/WebProject/notebook/inotebook/src/component /Notes.js"],"names":["React","useContext","noteContext","Notes","context","notes","setNotes","length","map","note","title"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAMC,OAAO,GAAGH,UAAU,CAACC,WAAD,CAA1B;AACA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBF,OAA5B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKC,KAAK,CAACE,MAAN,KAAiB,CAAjB,IAAsB;AAD3B;AAAA;AAAA;AAAA;AAAA,YAFJ,EAMKF,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAU;AACjB,aAAOA,IAAI,CAACC,KAAZ,CADiB,CAEjB;AACH,KAHA,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAjBD;;GAAMP,K;;KAAAA,K;AAmBN,eAAeA,KAAf","sourcesContent":["// import React, { useContext, useEffect, useRef ,useState} from 'react'\n// import noteContext from '../context/notes/noteContext'\n// import AddNote from './AddNote';\n// import Noteitem from './Noteitem';\n// import { useNavigate } from \"react-router-dom\"\n\n// function Notes() {\n//     const context = useContext(noteContext);\n//     const navigate = useNavigate();\n//     const { notes, getnotes , editNote } = context\n\n//     useEffect(() => {\n//         if(localStorage.getItem(\"token\")){\n\n//             getnotes();\n//         }\n//         else{\n//             navigate('/login')\n//         }\n//         // eslint-disable-next-line\n\n//     }, [])\n\n//     const updateNote = (currentNote) => {\n//         ref.current.click();\n//         setNote({ id:currentNote._id ,  etitle:currentNote.title , edescription : currentNote.description , etag : currentNote.tag})\n//     }\n//     const ref = useRef(null)\n//     const refClose = useRef(null)\n//     const [note , setNote] = useState({etitle:\"\" , edescription:\"\" ,etag:\"\" })\n\n//     const handleClick =(e)=>{\n//         // console.log(\"updating the notes \",note)\n//         editNote(note.id , note.etitle , note.edescription ,note.etag);\n//         refClose.current.click();\n\n//     }\n\n//     const onChange=(e)=>{\n//        setNote({...note , [e.target.name]: e.target.value})\n//     }\n\n//     return (\n//         <>\n//             <AddNote />\n//             {/* <!-- Button trigger modal --> */}\n//             <button ref={ref} type=\"button\" className=\"btn btn-primary d-none\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n//                 Launch demo modal\n//             </button>\n\n//             {/* <!-- Modal --> */}\n//             <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//                 <div className=\"modal-dialog\">\n//                     <div className=\"modal-content\">\n//                         <div className=\"modal-header\">\n//                             <h5 className=\"modal-title\" id=\"exampleModalLabel\"> Edit Notes </h5>\n//                             <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n//                         </div>\n//                         <div className=\"modal-body\">\n//                             {/* model form */}\n//                             <form>\n//                                 <div className=\"mb-3\">\n//                                     <label htmlFor=\"etitle\" className=\"form-label\">Title</label>\n//                                     <input type=\"text\" className=\"form-control\" id=\"etitle\" name=\"etitle\" value={note.etitle} aria-describedby=\"emailHelp\" onChange={onChange} minLength={3} required/>\n//                                 </div>\n//                                 <div className=\"mb-3\">\n//                                     <label htmlFor=\"edescription\" className=\"form-label\" >description</label>\n//                                     <input type=\"text\" className=\"form-control\" id=\"edescription\" name=\"edescription\" value={note.edescription} onChange={onChange} minLength={3} required/>\n//                                 </div>\n//                                 <div className=\"mb-3\">\n//                                     <label htmlFor=\"etag\" className=\"form-label\" >tag</label>\n//                                     <input type=\"text\" className=\"form-control\" id=\"etag\" name='etag' value={note.etag} onChange={onChange} minLength={3} required />\n//                                 </div>\n\n//                                 {/* <button type=\"submit\" className=\"btn btn-primary\" onClick={handleClick}>Add Note</button> */}\n//                             </form>\n//                         </div>\n//                         <div className=\"modal-footer\">\n//                             <button type=\"button\" ref={refClose} className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n//                             <button disabled={note.etitle.length<3 || note.edescription.length<3 } type=\"button\" onClick={handleClick} className=\"btn btn-primary\">Update Note</button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n\n//             <div className=\"row my-3\">\n//                 <h1> Your  Notes </h1> \n//                 <div className=\"container\">\n//                     {notes.length === 0 && 'no notes to display '}\n//                 </div>\n\n//                 {notes.map((note)=>{\n//                     return <Noteitem note = {note}/>\n//                 })}\n//             </div>\n//         </>\n//     )\n// }\n\n// export default Notes\n\nimport React, { useContext } from 'react';\nimport noteContext from '../context/notes/noteContext'\n\n\nconst Notes = () => {\n    const context = useContext(noteContext);\n    const { notes, setNotes } = context\n\n    return (\n        <div className=\"row my-3\">\n            <h1> Your  Notes </h1>\n            <div className=\"container\">\n                {notes.length === 0 && 'no notes to display '}\n            </div>\n\n            {notes.map((note) => {\n                return note.title;\n                // return <Noteitem note={note} />\n            })}\n        </div>\n    )\n}\n\nexport default Notes\n"]},"metadata":{},"sourceType":"module"}